:root {
    --primary: #192734;
    --primary-alt: #384047;
    --background: #f2f2f2;
    --surface: #caccce;
}

:root[data-theme="dark"] {
    --primary: rgba(255, 255, 255, 0.85);
    --primary-alt: rgba(217, 217, 217, 0.85);
    --background: #242424;
    --surface: hsla(0, 0%, 40%, 0.48);
}

:root {
    color: var(--primary);
    box-sizing: border-box;
    font-family: Helvetica, pingfang SC, Microsoft YaHei, SimSun, sans-serif;

    --border-width: 0.225rem;
    --outline-width: 0.3rem;
    --border-radius: 0.5em;

    --Huge: 2.5rem;
    --huge: 2rem;
    --Large: 1.5rem;
    --large: 1.2rem;
    --normal: 1rem;
}

body {
    background-color: var(--background);
}

button, input {
    all: unset;
    padding: 0.5em;
}

button:focus, input:focus {
    text-decoration: underline;
    outline: var(--outline-width) dashed var(--primary);
    outline-offset: 0.125em;
    z-index: 1;
}

button:hover, input:hover, .option:hover {
    background-color: var(--surface);
    cursor: pointer;
    text-decoration: underline;
}

button:disabled, input:disabled {
    background-color: var(--surface);
    border-color: var(--primary-alt);
    text-decoration: line-through;
    color: var(--primary-alt);
    cursor: not-allowed;
}

.message {
    font-size: var(--Huge);
    text-align: center;
}

button, .answer, label {
    user-select: none;
}

.phrase {
    text-align: center;
    font-size: var(--huge);
    line-height: 1em;
}

.options {
    font-size: var(--Large);
    display: flex;
    gap: 2ch;
    justify-content: center;
}

.word {
    display: flex;
}

.syllable {
    display: flex;
    flex-direction: column;
}

.option {
    padding: 1em;
    letter-spacing: 1px;
    position: relative;
}

.option input {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
}

.option .option-label {
    z-index: 2;
    position: sticky;
}

/* Possibly use `label:has(input:checked)` when firefox support is better */
.option.selected {
    font-weight: bold;
    letter-spacing: 0;
    background-color: var(--surface);
}

.button-bar {
    font-size: var(--huge);
    display: flex;
    gap: 2ch;
    justify-content: center;
}

.bottom-button {
    padding: 0.5em 2em;
    border-radius: var(--border-radius);
    border: var(--border-width) solid var(--primary);
}

.answer {
    font-size: var(--Large);
    text-align: center;
    height: 1em;
    margin: 0.25em 0 1em 0;
}

.syllable:first-of-type .option input {
    border-left: var(--border-width) solid var(--primary);
}

.syllable:last-of-type .option input {
    border-right: var(--border-width) solid var(--primary);
}

.syllable:not(:first-of-type) .option input {
    border-left: calc(var(--border-width) / 2) solid var(--primary);
}

.syllable:not(:last-of-type) .option input {
    border-right: calc(var(--border-width) / 2) solid var(--primary);
}

.option:last-of-type input {
    border-bottom: var(--border-width) solid var(--primary);
}

.option:first-of-type input {
    border-top: var(--border-width) solid var(--primary);
}

.syllable:first-of-type .option:first-of-type,
.syllable:first-of-type .option:first-of-type input {
    border-top-left-radius: var(--border-radius);
}

.syllable:last-of-type .option:first-of-type,
.syllable:last-of-type .option:first-of-type input {
    border-top-right-radius: var(--border-radius);
}

.syllable:first-of-type .option:last-of-type,
.syllable:first-of-type .option:last-of-type input {
    border-bottom-left-radius: var(--border-radius);
}

.syllable:last-of-type .option:last-of-type,
.syllable:last-of-type .option:last-of-type input {
    border-bottom-right-radius: var(--border-radius);
}
